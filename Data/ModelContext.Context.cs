//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Automovil> Automovil { get; set; }
        public virtual DbSet<Beneficiado> Beneficiado { get; set; }
        public virtual DbSet<CategoriaProducto> CategoriaProducto { get; set; }
        public virtual DbSet<CentroCosto> CentroCosto { get; set; }
        public virtual DbSet<Concepto> Concepto { get; set; }
        public virtual DbSet<Conductor> Conductor { get; set; }
        public virtual DbSet<Configuracion> Configuracion { get; set; }
        public virtual DbSet<CredencialesProveedorTaxi> CredencialesProveedorTaxi { get; set; }
        public virtual DbSet<Destino> Destino { get; set; }
        public virtual DbSet<EstadoProveedor> EstadoProveedor { get; set; }
        public virtual DbSet<EstadoServicio> EstadoServicio { get; set; }
        public virtual DbSet<GastoAdicional> GastoAdicional { get; set; }
        public virtual DbSet<Liquidacion> Liquidacion { get; set; }
        public virtual DbSet<LiquidacionDetalle> LiquidacionDetalle { get; set; }
        public virtual DbSet<LiquidacionEstado> LiquidacionEstado { get; set; }
        public virtual DbSet<MenuPagina> MenuPagina { get; set; }
        public virtual DbSet<MetodoProveedorTaxi> MetodoProveedorTaxi { get; set; }
        public virtual DbSet<MotivoCreacionSolicitud> MotivoCreacionSolicitud { get; set; }
        public virtual DbSet<Pagina> Pagina { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<PerfilPagina> PerfilPagina { get; set; }
        public virtual DbSet<ProveedorTaxi> ProveedorTaxi { get; set; }
        public virtual DbSet<ServicioProveedorTaxi> ServicioProveedorTaxi { get; set; }
        public virtual DbSet<SituacionServicio> SituacionServicio { get; set; }
        public virtual DbSet<Sociedad> Sociedad { get; set; }
        public virtual DbSet<Solicitud> Solicitud { get; set; }
        public virtual DbSet<SolicitudDetalle> SolicitudDetalle { get; set; }
        public virtual DbSet<SolicitudProveedorTaxi> SolicitudProveedorTaxi { get; set; }
        public virtual DbSet<TipoDestino> TipoDestino { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoPago> TipoPago { get; set; }
        public virtual DbSet<TipoServicio> TipoServicio { get; set; }
        public virtual DbSet<Tracking> Tracking { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioCentroCosto> UsuarioCentroCosto { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<usp_Automovil_By_Solicitud_Result> usp_Automovil_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Automovil_By_Solicitud_Result>("usp_Automovil_By_Solicitud", iDParameter);
        }
    
        public virtual int usp_Automovil_Insert(string placa, string color, string modelo, byte[] foto, Nullable<int> cantidadPasajeros, Nullable<int> idAutomovilServicio, Nullable<int> idProveedorTaxi)
        {
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var cantidadPasajerosParameter = cantidadPasajeros.HasValue ?
                new ObjectParameter("CantidadPasajeros", cantidadPasajeros) :
                new ObjectParameter("CantidadPasajeros", typeof(int));
    
            var idAutomovilServicioParameter = idAutomovilServicio.HasValue ?
                new ObjectParameter("IdAutomovilServicio", idAutomovilServicio) :
                new ObjectParameter("IdAutomovilServicio", typeof(int));
    
            var idProveedorTaxiParameter = idProveedorTaxi.HasValue ?
                new ObjectParameter("IdProveedorTaxi", idProveedorTaxi) :
                new ObjectParameter("IdProveedorTaxi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Automovil_Insert", placaParameter, colorParameter, modeloParameter, fotoParameter, cantidadPasajerosParameter, idAutomovilServicioParameter, idProveedorTaxiParameter);
        }
    
        public virtual int usp_Beneficiado_Insert(Nullable<int> solicitudID, Nullable<int> usersID, string apellidoPaterno, string apellidoMaterno, string nombre)
        {
            var solicitudIDParameter = solicitudID.HasValue ?
                new ObjectParameter("SolicitudID", solicitudID) :
                new ObjectParameter("SolicitudID", typeof(int));
    
            var usersIDParameter = usersID.HasValue ?
                new ObjectParameter("UsersID", usersID) :
                new ObjectParameter("UsersID", typeof(int));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Beneficiado_Insert", solicitudIDParameter, usersIDParameter, apellidoPaternoParameter, apellidoMaternoParameter, nombreParameter);
        }
    
        public virtual ObjectResult<usp_Beneficiado_List_By_Solicitud_Result> usp_Beneficiado_List_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Beneficiado_List_By_Solicitud_Result>("usp_Beneficiado_List_By_Solicitud", iDParameter);
        }
    
        public virtual ObjectResult<usp_CentroCosto_By_Codigo_Result> usp_CentroCosto_By_Codigo(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CentroCosto_By_Codigo_Result>("usp_CentroCosto_By_Codigo", codigoParameter);
        }
    
        public virtual ObjectResult<usp_CentroCosto_By_Solicitud_Result> usp_CentroCosto_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CentroCosto_By_Solicitud_Result>("usp_CentroCosto_By_Solicitud", iDParameter);
        }
    
        public virtual ObjectResult<usp_CentroCosto_Listar_Paginado_Result> usp_CentroCosto_Listar_Paginado(string codigo, string sociedad, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros, string flagTipo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var sociedadParameter = sociedad != null ?
                new ObjectParameter("Sociedad", sociedad) :
                new ObjectParameter("Sociedad", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var flagTipoParameter = flagTipo != null ?
                new ObjectParameter("FlagTipo", flagTipo) :
                new ObjectParameter("FlagTipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CentroCosto_Listar_Paginado_Result>("usp_CentroCosto_Listar_Paginado", codigoParameter, sociedadParameter, fechaDesdeParameter, fechaHastaParameter, pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros, flagTipoParameter);
        }
    
        public virtual ObjectResult<usp_Cliente_Select_Result> usp_Cliente_Select(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cliente_Select_Result>("usp_Cliente_Select", iDParameter);
        }
    
        public virtual ObjectResult<usp_Conductor_By_Solicitud_Result> usp_Conductor_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Conductor_By_Solicitud_Result>("usp_Conductor_By_Solicitud", iDParameter);
        }
    
        public virtual int usp_Conductor_Insert(Nullable<int> idConductorServicio, Nullable<int> idProveedorTaxi, Nullable<decimal> estrellas, string nombreCompleto, string documento, byte[] foto)
        {
            var idConductorServicioParameter = idConductorServicio.HasValue ?
                new ObjectParameter("IdConductorServicio", idConductorServicio) :
                new ObjectParameter("IdConductorServicio", typeof(int));
    
            var idProveedorTaxiParameter = idProveedorTaxi.HasValue ?
                new ObjectParameter("IdProveedorTaxi", idProveedorTaxi) :
                new ObjectParameter("IdProveedorTaxi", typeof(int));
    
            var estrellasParameter = estrellas.HasValue ?
                new ObjectParameter("Estrellas", estrellas) :
                new ObjectParameter("Estrellas", typeof(decimal));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Conductor_Insert", idConductorServicioParameter, idProveedorTaxiParameter, estrellasParameter, nombreCompletoParameter, documentoParameter, fotoParameter);
        }
    
        public virtual ObjectResult<usp_Destinio_List_By_Proveedor_Result> usp_Destinio_List_By_Proveedor(Nullable<int> idSolicitud, Nullable<int> idProveedor)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Destinio_List_By_Proveedor_Result>("usp_Destinio_List_By_Proveedor", idSolicitudParameter, idProveedorParameter);
        }
    
        public virtual int usp_DestinoServicio_Insert(Nullable<int> solicitudID, string lat, string lng, string direccion, string zonaOrigen, string zonaDestino, Nullable<decimal> distanciaKm)
        {
            var solicitudIDParameter = solicitudID.HasValue ?
                new ObjectParameter("SolicitudID", solicitudID) :
                new ObjectParameter("SolicitudID", typeof(int));
    
            var latParameter = lat != null ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(string));
    
            var lngParameter = lng != null ?
                new ObjectParameter("Lng", lng) :
                new ObjectParameter("Lng", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var zonaOrigenParameter = zonaOrigen != null ?
                new ObjectParameter("ZonaOrigen", zonaOrigen) :
                new ObjectParameter("ZonaOrigen", typeof(string));
    
            var zonaDestinoParameter = zonaDestino != null ?
                new ObjectParameter("ZonaDestino", zonaDestino) :
                new ObjectParameter("ZonaDestino", typeof(string));
    
            var distanciaKmParameter = distanciaKm.HasValue ?
                new ObjectParameter("DistanciaKm", distanciaKm) :
                new ObjectParameter("DistanciaKm", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DestinoServicio_Insert", solicitudIDParameter, latParameter, lngParameter, direccionParameter, zonaOrigenParameter, zonaDestinoParameter, distanciaKmParameter);
        }
    
        public virtual ObjectResult<usp_EstadoProveedor_GetBySolicitud_Result> usp_EstadoProveedor_GetBySolicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EstadoProveedor_GetBySolicitud_Result>("usp_EstadoProveedor_GetBySolicitud", iDParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_Cancelar_Result> usp_Liquidacion_Cancelar(Nullable<int> idLiquidacion, string userName, string usuarioCancelo)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var usuarioCanceloParameter = usuarioCancelo != null ?
                new ObjectParameter("UsuarioCancelo", usuarioCancelo) :
                new ObjectParameter("UsuarioCancelo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_Cancelar_Result>("usp_Liquidacion_Cancelar", idLiquidacionParameter, userNameParameter, usuarioCanceloParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_Insert_Result> usp_Liquidacion_Insert(string xMLService)
        {
            var xMLServiceParameter = xMLService != null ?
                new ObjectParameter("XMLService", xMLService) :
                new ObjectParameter("XMLService", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_Insert_Result>("usp_Liquidacion_Insert", xMLServiceParameter);
        }
    
        public virtual int usp_Liquidacion_Liquidar(Nullable<int> iD, string factura, Nullable<System.DateTime> fechaContable, Nullable<System.DateTime> fechaFactura, string facturaProvision, string usuario, string userName, string asientoContable, string ejercicio, Nullable<System.DateTime> diaRegistro, string usuarioRegistroSAP, string mensaje, string horaRegistro, string indicadorIGV, string indicadorCME, string indicadorDH, string cuentaMayor, string nombreFile, string rutaCompletaFile)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var facturaParameter = factura != null ?
                new ObjectParameter("Factura", factura) :
                new ObjectParameter("Factura", typeof(string));
    
            var fechaContableParameter = fechaContable.HasValue ?
                new ObjectParameter("FechaContable", fechaContable) :
                new ObjectParameter("FechaContable", typeof(System.DateTime));
    
            var fechaFacturaParameter = fechaFactura.HasValue ?
                new ObjectParameter("FechaFactura", fechaFactura) :
                new ObjectParameter("FechaFactura", typeof(System.DateTime));
    
            var facturaProvisionParameter = facturaProvision != null ?
                new ObjectParameter("FacturaProvision", facturaProvision) :
                new ObjectParameter("FacturaProvision", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var asientoContableParameter = asientoContable != null ?
                new ObjectParameter("AsientoContable", asientoContable) :
                new ObjectParameter("AsientoContable", typeof(string));
    
            var ejercicioParameter = ejercicio != null ?
                new ObjectParameter("Ejercicio", ejercicio) :
                new ObjectParameter("Ejercicio", typeof(string));
    
            var diaRegistroParameter = diaRegistro.HasValue ?
                new ObjectParameter("DiaRegistro", diaRegistro) :
                new ObjectParameter("DiaRegistro", typeof(System.DateTime));
    
            var usuarioRegistroSAPParameter = usuarioRegistroSAP != null ?
                new ObjectParameter("UsuarioRegistroSAP", usuarioRegistroSAP) :
                new ObjectParameter("UsuarioRegistroSAP", typeof(string));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var horaRegistroParameter = horaRegistro != null ?
                new ObjectParameter("HoraRegistro", horaRegistro) :
                new ObjectParameter("HoraRegistro", typeof(string));
    
            var indicadorIGVParameter = indicadorIGV != null ?
                new ObjectParameter("IndicadorIGV", indicadorIGV) :
                new ObjectParameter("IndicadorIGV", typeof(string));
    
            var indicadorCMEParameter = indicadorCME != null ?
                new ObjectParameter("IndicadorCME", indicadorCME) :
                new ObjectParameter("IndicadorCME", typeof(string));
    
            var indicadorDHParameter = indicadorDH != null ?
                new ObjectParameter("IndicadorDH", indicadorDH) :
                new ObjectParameter("IndicadorDH", typeof(string));
    
            var cuentaMayorParameter = cuentaMayor != null ?
                new ObjectParameter("CuentaMayor", cuentaMayor) :
                new ObjectParameter("CuentaMayor", typeof(string));
    
            var nombreFileParameter = nombreFile != null ?
                new ObjectParameter("NombreFile", nombreFile) :
                new ObjectParameter("NombreFile", typeof(string));
    
            var rutaCompletaFileParameter = rutaCompletaFile != null ?
                new ObjectParameter("RutaCompletaFile", rutaCompletaFile) :
                new ObjectParameter("RutaCompletaFile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Liquidacion_Liquidar", iDParameter, facturaParameter, fechaContableParameter, fechaFacturaParameter, facturaProvisionParameter, usuarioParameter, userNameParameter, asientoContableParameter, ejercicioParameter, diaRegistroParameter, usuarioRegistroSAPParameter, mensajeParameter, horaRegistroParameter, indicadorIGVParameter, indicadorCMEParameter, indicadorDHParameter, cuentaMayorParameter, nombreFileParameter, rutaCompletaFileParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_Listar_Result> usp_Liquidacion_Listar(Nullable<int> estado, Nullable<int> proveedorTaxiID, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var proveedorTaxiIDParameter = proveedorTaxiID.HasValue ?
                new ObjectParameter("ProveedorTaxiID", proveedorTaxiID) :
                new ObjectParameter("ProveedorTaxiID", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_Listar_Result>("usp_Liquidacion_Listar", estadoParameter, proveedorTaxiIDParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_Listar_Paginado_Result> usp_Liquidacion_Listar_Paginado(Nullable<int> estado, Nullable<int> proveedorTaxiID, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros)
        {
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var proveedorTaxiIDParameter = proveedorTaxiID.HasValue ?
                new ObjectParameter("ProveedorTaxiID", proveedorTaxiID) :
                new ObjectParameter("ProveedorTaxiID", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_Listar_Paginado_Result>("usp_Liquidacion_Listar_Paginado", estadoParameter, proveedorTaxiIDParameter, fechaInicioParameter, fechaFinParameter, pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros);
        }
    
        public virtual ObjectResult<usp_Pagina_List_Result> usp_Pagina_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Pagina_List_Result>("usp_Pagina_List");
        }
    
        public virtual ObjectResult<usp_Pagina_List_By_Perfil_Result> usp_Pagina_List_By_Perfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Pagina_List_By_Perfil_Result>("usp_Pagina_List_By_Perfil", idPerfilParameter);
        }
    
        public virtual ObjectResult<usp_Pagina_List_Not_In_Perfil_Result> usp_Pagina_List_Not_In_Perfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Pagina_List_Not_In_Perfil_Result>("usp_Pagina_List_Not_In_Perfil", idPerfilParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Perfil_Insert(string nombre, string descripcion, Nullable<int> idEstado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Perfil_Insert", nombreParameter, descripcionParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<usp_Perfil_Listar_Paginado_Result> usp_Perfil_Listar_Paginado(Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Perfil_Listar_Paginado_Result>("usp_Perfil_Listar_Paginado", pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros);
        }
    
        public virtual int usp_Perfil_Update(Nullable<int> iD, string nombre, string descripcion, Nullable<int> idEstado)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Perfil_Update", iDParameter, nombreParameter, descripcionParameter, idEstadoParameter);
        }
    
        public virtual int usp_PerfilPagina_Delete(Nullable<int> idPagina, Nullable<int> idPerfil)
        {
            var idPaginaParameter = idPagina.HasValue ?
                new ObjectParameter("IdPagina", idPagina) :
                new ObjectParameter("IdPagina", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PerfilPagina_Delete", idPaginaParameter, idPerfilParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_PerfilPagina_Insert(Nullable<int> idPagina, Nullable<int> idPerfil)
        {
            var idPaginaParameter = idPagina.HasValue ?
                new ObjectParameter("IdPagina", idPagina) :
                new ObjectParameter("IdPagina", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_PerfilPagina_Insert", idPaginaParameter, idPerfilParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_Proveedor_Insert(string razonSocial, string rUC, Nullable<decimal> tiempoReserva, Nullable<decimal> tiempoEspera, Nullable<int> telefono, string direccion, string codigoSAP, string contacto, string email, Nullable<int> idEstado, Nullable<int> idIndicadorIGVFactura, Nullable<int> idIndicadorIGVProvision)
        {
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var tiempoReservaParameter = tiempoReserva.HasValue ?
                new ObjectParameter("TiempoReserva", tiempoReserva) :
                new ObjectParameter("TiempoReserva", typeof(decimal));
    
            var tiempoEsperaParameter = tiempoEspera.HasValue ?
                new ObjectParameter("TiempoEspera", tiempoEspera) :
                new ObjectParameter("TiempoEspera", typeof(decimal));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoSAPParameter = codigoSAP != null ?
                new ObjectParameter("CodigoSAP", codigoSAP) :
                new ObjectParameter("CodigoSAP", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idIndicadorIGVFacturaParameter = idIndicadorIGVFactura.HasValue ?
                new ObjectParameter("IdIndicadorIGVFactura", idIndicadorIGVFactura) :
                new ObjectParameter("IdIndicadorIGVFactura", typeof(int));
    
            var idIndicadorIGVProvisionParameter = idIndicadorIGVProvision.HasValue ?
                new ObjectParameter("IdIndicadorIGVProvision", idIndicadorIGVProvision) :
                new ObjectParameter("IdIndicadorIGVProvision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_Proveedor_Insert", razonSocialParameter, rUCParameter, tiempoReservaParameter, tiempoEsperaParameter, telefonoParameter, direccionParameter, codigoSAPParameter, contactoParameter, emailParameter, idEstadoParameter, idIndicadorIGVFacturaParameter, idIndicadorIGVProvisionParameter);
        }
    
        public virtual ObjectResult<usp_Proveedor_Listar_Paginado_Result> usp_Proveedor_Listar_Paginado(Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros, string ruc, string razonSocial, string codigoSap)
        {
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var rucParameter = ruc != null ?
                new ObjectParameter("Ruc", ruc) :
                new ObjectParameter("Ruc", typeof(string));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var codigoSapParameter = codigoSap != null ?
                new ObjectParameter("CodigoSap", codigoSap) :
                new ObjectParameter("CodigoSap", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Proveedor_Listar_Paginado_Result>("usp_Proveedor_Listar_Paginado", pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros, rucParameter, razonSocialParameter, codigoSapParameter);
        }
    
        public virtual int usp_Proveedor_Update(Nullable<int> iD, string razonSocial, string rUC, Nullable<decimal> tiempoReserva, Nullable<decimal> tiempoEspera, Nullable<int> telefono, string direccion, string codigoSAP, string contacto, string email, Nullable<int> idEstado, Nullable<int> idIndicadorIGVFactura, Nullable<int> idIndicadorIGVProvision)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var tiempoReservaParameter = tiempoReserva.HasValue ?
                new ObjectParameter("TiempoReserva", tiempoReserva) :
                new ObjectParameter("TiempoReserva", typeof(decimal));
    
            var tiempoEsperaParameter = tiempoEspera.HasValue ?
                new ObjectParameter("TiempoEspera", tiempoEspera) :
                new ObjectParameter("TiempoEspera", typeof(decimal));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var codigoSAPParameter = codigoSAP != null ?
                new ObjectParameter("CodigoSAP", codigoSAP) :
                new ObjectParameter("CodigoSAP", typeof(string));
    
            var contactoParameter = contacto != null ?
                new ObjectParameter("Contacto", contacto) :
                new ObjectParameter("Contacto", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idIndicadorIGVFacturaParameter = idIndicadorIGVFactura.HasValue ?
                new ObjectParameter("IdIndicadorIGVFactura", idIndicadorIGVFactura) :
                new ObjectParameter("IdIndicadorIGVFactura", typeof(int));
    
            var idIndicadorIGVProvisionParameter = idIndicadorIGVProvision.HasValue ?
                new ObjectParameter("IdIndicadorIGVProvision", idIndicadorIGVProvision) :
                new ObjectParameter("IdIndicadorIGVProvision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Proveedor_Update", iDParameter, razonSocialParameter, rUCParameter, tiempoReservaParameter, tiempoEsperaParameter, telefonoParameter, direccionParameter, codigoSAPParameter, contactoParameter, emailParameter, idEstadoParameter, idIndicadorIGVFacturaParameter, idIndicadorIGVProvisionParameter);
        }
    
        public virtual ObjectResult<usp_ProveedorTaxi_Activo_Result> usp_ProveedorTaxi_Activo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProveedorTaxi_Activo_Result>("usp_ProveedorTaxi_Activo");
        }
    
        public virtual ObjectResult<usp_ProveedorTaxi_List_By_Solicitud_Result> usp_ProveedorTaxi_List_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProveedorTaxi_List_By_Solicitud_Result>("usp_ProveedorTaxi_List_By_Solicitud", iDParameter);
        }
    
        public virtual int usp_PushServicioProveedorTaxi(string xMLPush)
        {
            var xMLPushParameter = xMLPush != null ?
                new ObjectParameter("XMLPush", xMLPush) :
                new ObjectParameter("XMLPush", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PushServicioProveedorTaxi", xMLPushParameter);
        }
    
        public virtual ObjectResult<usp_ServicioProveedorTaxi_By_Proveedor_Result> usp_ServicioProveedorTaxi_By_Proveedor(string rUCProveedor, Nullable<int> idMetodoProveedorTaxi)
        {
            var rUCProveedorParameter = rUCProveedor != null ?
                new ObjectParameter("RUCProveedor", rUCProveedor) :
                new ObjectParameter("RUCProveedor", typeof(string));
    
            var idMetodoProveedorTaxiParameter = idMetodoProveedorTaxi.HasValue ?
                new ObjectParameter("IdMetodoProveedorTaxi", idMetodoProveedorTaxi) :
                new ObjectParameter("IdMetodoProveedorTaxi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ServicioProveedorTaxi_By_Proveedor_Result>("usp_ServicioProveedorTaxi_By_Proveedor", rUCProveedorParameter, idMetodoProveedorTaxiParameter);
        }
    
        public virtual int usp_ServicioProveedorTaxi_Insert(string xMLMethod, Nullable<int> idProveedor)
        {
            var xMLMethodParameter = xMLMethod != null ?
                new ObjectParameter("XMLMethod", xMLMethod) :
                new ObjectParameter("XMLMethod", typeof(string));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ServicioProveedorTaxi_Insert", xMLMethodParameter, idProveedorParameter);
        }
    
        public virtual ObjectResult<usp_ServicioProveedorTaxi_List_Result> usp_ServicioProveedorTaxi_List(Nullable<int> idProveedor)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ServicioProveedorTaxi_List_Result>("usp_ServicioProveedorTaxi_List", idProveedorParameter);
        }
    
        public virtual ObjectResult<usp_SituacionServicio_GetBySolicitud_Result> usp_SituacionServicio_GetBySolicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SituacionServicio_GetBySolicitud_Result>("usp_SituacionServicio_GetBySolicitud", iDParameter);
        }
    
        public virtual ObjectResult<string> usp_Sociedad_GetRUCByID(string codigo)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Sociedad_GetRUCByID", codigoParameter);
        }
    
        public virtual int usp_Solicitud_Approve(string xMLService)
        {
            var xMLServiceParameter = xMLService != null ?
                new ObjectParameter("XMLService", xMLService) :
                new ObjectParameter("XMLService", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_Approve", xMLServiceParameter);
        }
    
        public virtual ObjectResult<usp_Solicitud_Buscar_Paginado_Result> usp_Solicitud_Buscar_Paginado(Nullable<int> idProveedor, string fechaInicioStr, string fechaFinStr, Nullable<int> idSociedad)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var fechaInicioStrParameter = fechaInicioStr != null ?
                new ObjectParameter("FechaInicioStr", fechaInicioStr) :
                new ObjectParameter("FechaInicioStr", typeof(string));
    
            var fechaFinStrParameter = fechaFinStr != null ?
                new ObjectParameter("FechaFinStr", fechaFinStr) :
                new ObjectParameter("FechaFinStr", typeof(string));
    
            var idSociedadParameter = idSociedad.HasValue ?
                new ObjectParameter("IdSociedad", idSociedad) :
                new ObjectParameter("IdSociedad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Solicitud_Buscar_Paginado_Result>("usp_Solicitud_Buscar_Paginado", idProveedorParameter, fechaInicioStrParameter, fechaFinStrParameter, idSociedadParameter);
        }
    
        public virtual int usp_Solicitud_Cancel(Nullable<int> iD, string motivoCancelacion, string usuarioRegistro)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var motivoCancelacionParameter = motivoCancelacion != null ?
                new ObjectParameter("MotivoCancelacion", motivoCancelacion) :
                new ObjectParameter("MotivoCancelacion", typeof(string));
    
            var usuarioRegistroParameter = usuarioRegistro != null ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_Cancel", iDParameter, motivoCancelacionParameter, usuarioRegistroParameter);
        }
    
        public virtual ObjectResult<usp_Solicitud_GetByID_Result> usp_Solicitud_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Solicitud_GetByID_Result>("usp_Solicitud_GetByID", iDParameter);
        }
    
        public virtual ObjectResult<usp_Solicitud_GetByLiquidacionID_Result> usp_Solicitud_GetByLiquidacionID(Nullable<int> idLiquidacion, Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Solicitud_GetByLiquidacionID_Result>("usp_Solicitud_GetByLiquidacionID", idLiquidacionParameter, pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros);
        }
    
        public virtual ObjectResult<usp_Solicitud_GetByLiquidacionIDForExcel_Result> usp_Solicitud_GetByLiquidacionIDForExcel(Nullable<int> liquidacionID)
        {
            var liquidacionIDParameter = liquidacionID.HasValue ?
                new ObjectParameter("LiquidacionID", liquidacionID) :
                new ObjectParameter("LiquidacionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Solicitud_GetByLiquidacionIDForExcel_Result>("usp_Solicitud_GetByLiquidacionIDForExcel", liquidacionIDParameter);
        }
    
        public virtual int usp_Solicitud_Insert(string xMLService)
        {
            var xMLServiceParameter = xMLService != null ?
                new ObjectParameter("XMLService", xMLService) :
                new ObjectParameter("XMLService", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_Insert", xMLServiceParameter);
        }
    
        public virtual ObjectResult<usp_Solicitud_List_Result> usp_Solicitud_List(Nullable<int> sociedad, Nullable<int> idPerfil, string userNameRegistro, string fechaDesde, string fechaHasta, Nullable<int> idSituacionServicio, string codigoSolicitud, string centroCosto, Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros)
        {
            var sociedadParameter = sociedad.HasValue ?
                new ObjectParameter("Sociedad", sociedad) :
                new ObjectParameter("Sociedad", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var userNameRegistroParameter = userNameRegistro != null ?
                new ObjectParameter("UserNameRegistro", userNameRegistro) :
                new ObjectParameter("UserNameRegistro", typeof(string));
    
            var fechaDesdeParameter = fechaDesde != null ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(string));
    
            var fechaHastaParameter = fechaHasta != null ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(string));
    
            var idSituacionServicioParameter = idSituacionServicio.HasValue ?
                new ObjectParameter("IdSituacionServicio", idSituacionServicio) :
                new ObjectParameter("IdSituacionServicio", typeof(int));
    
            var codigoSolicitudParameter = codigoSolicitud != null ?
                new ObjectParameter("CodigoSolicitud", codigoSolicitud) :
                new ObjectParameter("CodigoSolicitud", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Solicitud_List_Result>("usp_Solicitud_List", sociedadParameter, idPerfilParameter, userNameRegistroParameter, fechaDesdeParameter, fechaHastaParameter, idSituacionServicioParameter, codigoSolicitudParameter, centroCostoParameter, pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros);
        }
    
        public virtual int usp_Solicitud_Refuse(Nullable<int> iD, string usuarioRegistro, string motivoRechazo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var usuarioRegistroParameter = usuarioRegistro != null ?
                new ObjectParameter("UsuarioRegistro", usuarioRegistro) :
                new ObjectParameter("UsuarioRegistro", typeof(string));
    
            var motivoRechazoParameter = motivoRechazo != null ?
                new ObjectParameter("MotivoRechazo", motivoRechazo) :
                new ObjectParameter("MotivoRechazo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_Refuse", iDParameter, usuarioRegistroParameter, motivoRechazoParameter);
        }
    
        public virtual int usp_Solicitud_UpdateCentroCosto(Nullable<int> iD, string centroCosto)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_UpdateCentroCosto", iDParameter, centroCostoParameter);
        }
    
        public virtual int usp_SolicitudProveedorTaxi_Insert(Nullable<int> solicitudID, Nullable<int> proveedorTaxiID, Nullable<decimal> precioServicio, string seleccionado)
        {
            var solicitudIDParameter = solicitudID.HasValue ?
                new ObjectParameter("SolicitudID", solicitudID) :
                new ObjectParameter("SolicitudID", typeof(int));
    
            var proveedorTaxiIDParameter = proveedorTaxiID.HasValue ?
                new ObjectParameter("ProveedorTaxiID", proveedorTaxiID) :
                new ObjectParameter("ProveedorTaxiID", typeof(int));
    
            var precioServicioParameter = precioServicio.HasValue ?
                new ObjectParameter("PrecioServicio", precioServicio) :
                new ObjectParameter("PrecioServicio", typeof(decimal));
    
            var seleccionadoParameter = seleccionado != null ?
                new ObjectParameter("Seleccionado", seleccionado) :
                new ObjectParameter("Seleccionado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SolicitudProveedorTaxi_Insert", solicitudIDParameter, proveedorTaxiIDParameter, precioServicioParameter, seleccionadoParameter);
        }
    
        public virtual ObjectResult<usp_User_Listar_Paginado_Result> usp_User_Listar_Paginado(string nombres, string apellidos, string email, string codigoCentroCosto, string numeroDocumento, Nullable<int> idPerfil, Nullable<int> pageSize, Nullable<int> pageIndex, ObjectParameter totalRows, ObjectParameter cantidadRegistros)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_User_Listar_Paginado_Result>("usp_User_Listar_Paginado", nombresParameter, apellidosParameter, emailParameter, codigoCentroCostoParameter, numeroDocumentoParameter, idPerfilParameter, pageSizeParameter, pageIndexParameter, totalRows, cantidadRegistros);
        }
    
        public virtual int usp_User_Update(Nullable<int> idPefil, Nullable<int> idUsuario, string codigoCentroCostro, string listaCentroCosto)
        {
            var idPefilParameter = idPefil.HasValue ?
                new ObjectParameter("IdPefil", idPefil) :
                new ObjectParameter("IdPefil", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var codigoCentroCostroParameter = codigoCentroCostro != null ?
                new ObjectParameter("CodigoCentroCostro", codigoCentroCostro) :
                new ObjectParameter("CodigoCentroCostro", typeof(string));
    
            var listaCentroCostoParameter = listaCentroCosto != null ?
                new ObjectParameter("ListaCentroCosto", listaCentroCosto) :
                new ObjectParameter("ListaCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_User_Update", idPefilParameter, idUsuarioParameter, codigoCentroCostroParameter, listaCentroCostoParameter);
        }
    
        public virtual ObjectResult<usp_Responsable_Listar_Result> usp_Responsable_Listar()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Responsable_Listar_Result>("usp_Responsable_Listar");
        }
    
        public virtual ObjectResult<usp_Liquidacion_List_By_ID_Result> usp_Liquidacion_List_By_ID(Nullable<int> cod_Liquidacion)
        {
            var cod_LiquidacionParameter = cod_Liquidacion.HasValue ?
                new ObjectParameter("Cod_Liquidacion", cod_Liquidacion) :
                new ObjectParameter("Cod_Liquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_List_By_ID_Result>("usp_Liquidacion_List_By_ID", cod_LiquidacionParameter);
        }
    
        [DbFunction("Entities", "Fn_SplitContenido")]
        public virtual IQueryable<Fn_SplitContenido_Result> Fn_SplitContenido(string rowData, string delimeter)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fn_SplitContenido_Result>("[Entities].[Fn_SplitContenido](@RowData, @Delimeter)", rowDataParameter, delimeterParameter);
        }
    
        public virtual int usp_CentroCosto_Update(string codigo, Nullable<bool> flagCosto, Nullable<bool> flagGasto, Nullable<int> idResponsable)
        {
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var flagCostoParameter = flagCosto.HasValue ?
                new ObjectParameter("FlagCosto", flagCosto) :
                new ObjectParameter("FlagCosto", typeof(bool));
    
            var flagGastoParameter = flagGasto.HasValue ?
                new ObjectParameter("FlagGasto", flagGasto) :
                new ObjectParameter("FlagGasto", typeof(bool));
    
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CentroCosto_Update", codigoParameter, flagCostoParameter, flagGastoParameter, idResponsableParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CentroCosto_Validar(string codigoCentroCosto)
        {
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CentroCosto_Validar", codigoCentroCostoParameter);
        }
    
        public virtual ObjectResult<usp_ReporteComparacionMensual_Listar_Result> usp_ReporteComparacionMensual_Listar(Nullable<int> idResponsable, string fecha_Inicio, string fecha_Fin, Nullable<int> idSociedad)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var idSociedadParameter = idSociedad.HasValue ?
                new ObjectParameter("IdSociedad", idSociedad) :
                new ObjectParameter("IdSociedad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteComparacionMensual_Listar_Result>("usp_ReporteComparacionMensual_Listar", idResponsableParameter, fecha_InicioParameter, fecha_FinParameter, idSociedadParameter);
        }
    
        public virtual ObjectResult<usp_ReporteDetalleGastoTotal_Listar_Result> usp_ReporteDetalleGastoTotal_Listar(Nullable<int> idResponsable, string fecha_Inicio, string fecha_Fin, Nullable<int> idSociedad)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var idSociedadParameter = idSociedad.HasValue ?
                new ObjectParameter("IdSociedad", idSociedad) :
                new ObjectParameter("IdSociedad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteDetalleGastoTotal_Listar_Result>("usp_ReporteDetalleGastoTotal_Listar", idResponsableParameter, fecha_InicioParameter, fecha_FinParameter, idSociedadParameter);
        }
    
        public virtual ObjectResult<usp_ReporteGastoTotal_Listar_Result> usp_ReporteGastoTotal_Listar(Nullable<int> idResponsable, string fecha_Inicio, string fecha_Fin, Nullable<int> idSociedad)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var idSociedadParameter = idSociedad.HasValue ?
                new ObjectParameter("IdSociedad", idSociedad) :
                new ObjectParameter("IdSociedad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteGastoTotal_Listar_Result>("usp_ReporteGastoTotal_Listar", idResponsableParameter, fecha_InicioParameter, fecha_FinParameter, idSociedadParameter);
        }
    
        public virtual ObjectResult<usp_ReportePenalidadTiempoEspera_Listar_Result> usp_ReportePenalidadTiempoEspera_Listar(Nullable<int> idResponsable, string fecha_Inicio, string fecha_Fin, Nullable<int> idSociedad)
        {
            var idResponsableParameter = idResponsable.HasValue ?
                new ObjectParameter("IdResponsable", idResponsable) :
                new ObjectParameter("IdResponsable", typeof(int));
    
            var fecha_InicioParameter = fecha_Inicio != null ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(string));
    
            var fecha_FinParameter = fecha_Fin != null ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(string));
    
            var idSociedadParameter = idSociedad.HasValue ?
                new ObjectParameter("IdSociedad", idSociedad) :
                new ObjectParameter("IdSociedad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReportePenalidadTiempoEspera_Listar_Result>("usp_ReportePenalidadTiempoEspera_Listar", idResponsableParameter, fecha_InicioParameter, fecha_FinParameter, idSociedadParameter);
        }
    
        public virtual ObjectResult<usp_Usuario_By_ID_Result> usp_Usuario_By_ID(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Usuario_By_ID_Result>("usp_Usuario_By_ID", idUsuarioParameter);
        }
    
        public virtual ObjectResult<usp_Usuario_List_Result> usp_Usuario_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Usuario_List_Result>("usp_Usuario_List");
        }
    
        public virtual ObjectResult<usp_UsuarioCentroCosto_By_ID_Result> usp_UsuarioCentroCosto_By_ID(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UsuarioCentroCosto_By_ID_Result>("usp_UsuarioCentroCosto_By_ID", idUsuarioParameter);
        }
    
        public virtual ObjectResult<usp_DetalleSolicitud_By_Solicitud_Result> usp_DetalleSolicitud_By_Solicitud(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DetalleSolicitud_By_Solicitud_Result>("usp_DetalleSolicitud_By_Solicitud", idSolicitudParameter);
        }
    
        public virtual ObjectResult<usp_GastoAdicional_By_Solicitud_Result> usp_GastoAdicional_By_Solicitud(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GastoAdicional_By_Solicitud_Result>("usp_GastoAdicional_By_Solicitud", idSolicitudParameter);
        }
    
        public virtual ObjectResult<usp_Proveedor_GetByID_Result> usp_Proveedor_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Proveedor_GetByID_Result>("usp_Proveedor_GetByID", iDParameter);
        }
    
        public virtual ObjectResult<string> usp_Proveedor_Sel_Get_RUC_By_Servicio(Nullable<int> idServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Proveedor_Sel_Get_RUC_By_Servicio", idServicioParameter);
        }
    
        public virtual ObjectResult<usp_Tracking_Sel_By_Solicitud_Result> usp_Tracking_Sel_By_Solicitud(Nullable<int> idServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Tracking_Sel_By_Solicitud_Result>("usp_Tracking_Sel_By_Solicitud", idServicioParameter);
        }
    
        public virtual int usp_Upd_Servicio_State(Nullable<int> idServicio, Nullable<int> idEstadoServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idEstadoServicioParameter = idEstadoServicio.HasValue ?
                new ObjectParameter("IdEstadoServicio", idEstadoServicio) :
                new ObjectParameter("IdEstadoServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Upd_Servicio_State", idServicioParameter, idEstadoServicioParameter);
        }
    
        public virtual int usp_Upd_Usuario_STS(string subjectID, string nombres, string apellidos, string userName, string email, string telefono, string tipoDocumento, string numeroDocumento, string codigoCentroCosto, string codigoSociedad, string idEstado)
        {
            var subjectIDParameter = subjectID != null ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            var codigoSociedadParameter = codigoSociedad != null ?
                new ObjectParameter("CodigoSociedad", codigoSociedad) :
                new ObjectParameter("CodigoSociedad", typeof(string));
    
            var idEstadoParameter = idEstado != null ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Upd_Usuario_STS", subjectIDParameter, nombresParameter, apellidosParameter, userNameParameter, emailParameter, telefonoParameter, tipoDocumentoParameter, numeroDocumentoParameter, codigoCentroCostoParameter, codigoSociedadParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<usp_User_Get_By_UserName_Result> usp_User_Get_By_UserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_User_Get_By_UserName_Result>("usp_User_Get_By_UserName", userNameParameter);
        }
    
        public virtual ObjectResult<string> usp_UserNameAprobo_By_Solicitu(Nullable<int> idSolicitud)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_UserNameAprobo_By_Solicitu", idSolicitudParameter);
        }
    
        public virtual ObjectResult<usp_Beneficiado_Lis_By_Servicio_Result> usp_Beneficiado_Lis_By_Servicio(Nullable<int> idServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Beneficiado_Lis_By_Servicio_Result>("usp_Beneficiado_Lis_By_Servicio", idServicioParameter);
        }
    
        public virtual ObjectResult<usp_SolicitudCorreo_By_Servicio_Result> usp_SolicitudCorreo_By_Servicio(Nullable<int> idServicio)
        {
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SolicitudCorreo_By_Servicio_Result>("usp_SolicitudCorreo_By_Servicio", idServicioParameter);
        }
    
        public virtual int usp_Solicitud_UpdateCalificacion(Nullable<int> iD, Nullable<int> calificacion, string comentarioCalificacion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(int));
    
            var comentarioCalificacionParameter = comentarioCalificacion != null ?
                new ObjectParameter("ComentarioCalificacion", comentarioCalificacion) :
                new ObjectParameter("ComentarioCalificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Solicitud_UpdateCalificacion", iDParameter, calificacionParameter, comentarioCalificacionParameter);
        }
    
        public virtual ObjectResult<usp_MenuPagina_Listar_By_UserName_Result> usp_MenuPagina_Listar_By_UserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MenuPagina_Listar_By_UserName_Result>("usp_MenuPagina_Listar_By_UserName", userNameParameter);
        }
    
        public virtual ObjectResult<usp_Pagina_Listar_By_UserName_Result> usp_Pagina_Listar_By_UserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Pagina_Listar_By_UserName_Result>("usp_Pagina_Listar_By_UserName", userNameParameter);
        }
    
        public virtual int usp_Delete_Transaction_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Delete_Transaction_All");
        }
    
        public virtual ObjectResult<usp_Destino_By_Solicitud_Result> usp_Destino_By_Solicitud(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Destino_By_Solicitud_Result>("usp_Destino_By_Solicitud", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Solicitud_GetByCalificacion(string userNameRegistro)
        {
            var userNameRegistroParameter = userNameRegistro != null ?
                new ObjectParameter("UserNameRegistro", userNameRegistro) :
                new ObjectParameter("UserNameRegistro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Solicitud_GetByCalificacion", userNameRegistroParameter);
        }
    
        public virtual int usp_Beneficiado_Delete(Nullable<int> iD, Nullable<int> solicitudID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var solicitudIDParameter = solicitudID.HasValue ?
                new ObjectParameter("SolicitudID", solicitudID) :
                new ObjectParameter("SolicitudID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Beneficiado_Delete", iDParameter, solicitudIDParameter);
        }
    
        public virtual int usp_Beneficiado_Add(Nullable<int> solicitudID, Nullable<int> idTipoDocumento, Nullable<int> usersID, string apellidos, string nombre, string telefono, Nullable<bool> flagPrincipal, string numeroDocumento, string codigoCentroCosto)
        {
            var solicitudIDParameter = solicitudID.HasValue ?
                new ObjectParameter("SolicitudID", solicitudID) :
                new ObjectParameter("SolicitudID", typeof(int));
    
            var idTipoDocumentoParameter = idTipoDocumento.HasValue ?
                new ObjectParameter("IdTipoDocumento", idTipoDocumento) :
                new ObjectParameter("IdTipoDocumento", typeof(int));
    
            var usersIDParameter = usersID.HasValue ?
                new ObjectParameter("UsersID", usersID) :
                new ObjectParameter("UsersID", typeof(int));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var flagPrincipalParameter = flagPrincipal.HasValue ?
                new ObjectParameter("FlagPrincipal", flagPrincipal) :
                new ObjectParameter("FlagPrincipal", typeof(bool));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Beneficiado_Add", solicitudIDParameter, idTipoDocumentoParameter, usersIDParameter, apellidosParameter, nombreParameter, telefonoParameter, flagPrincipalParameter, numeroDocumentoParameter, codigoCentroCostoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_CredencialesProveedorTaxi_Insert(Nullable<int> idProveedor, string username, string contraseña, string grantType, string keyApi)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var grantTypeParameter = grantType != null ?
                new ObjectParameter("GrantType", grantType) :
                new ObjectParameter("GrantType", typeof(string));
    
            var keyApiParameter = keyApi != null ?
                new ObjectParameter("KeyApi", keyApi) :
                new ObjectParameter("KeyApi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_CredencialesProveedorTaxi_Insert", idProveedorParameter, usernameParameter, contraseñaParameter, grantTypeParameter, keyApiParameter);
        }
    
        public virtual int usp_CredencialesProveedorTaxi_Update(Nullable<int> iD, Nullable<int> idProveedor, string username, string contraseña, string grantType, string keyApi)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var grantTypeParameter = grantType != null ?
                new ObjectParameter("GrantType", grantType) :
                new ObjectParameter("GrantType", typeof(string));
    
            var keyApiParameter = keyApi != null ?
                new ObjectParameter("KeyApi", keyApi) :
                new ObjectParameter("KeyApi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CredencialesProveedorTaxi_Update", iDParameter, idProveedorParameter, usernameParameter, contraseñaParameter, grantTypeParameter, keyApiParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_By_Id_Result> usp_Liquidacion_By_Id(Nullable<int> idLiquidacion)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_By_Id_Result>("usp_Liquidacion_By_Id", idLiquidacionParameter);
        }
    
        public virtual ObjectResult<usp_Liquidacion_Export_By_ID_Result> usp_Liquidacion_Export_By_ID(Nullable<int> idLiquidacion)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Liquidacion_Export_By_ID_Result>("usp_Liquidacion_Export_By_ID", idLiquidacionParameter);
        }
    
        public virtual ObjectResult<usp_LiquidacionDeatlle_By_Liquidacion_Result> usp_LiquidacionDeatlle_By_Liquidacion(Nullable<int> idLiquidacion)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LiquidacionDeatlle_By_Liquidacion_Result>("usp_LiquidacionDeatlle_By_Liquidacion", idLiquidacionParameter);
        }
    
        public virtual int usp_LiquidacionDetalle_Update(Nullable<int> idLiquidacionDetalle, string centroCostoAfecto, string ordenServicio)
        {
            var idLiquidacionDetalleParameter = idLiquidacionDetalle.HasValue ?
                new ObjectParameter("IdLiquidacionDetalle", idLiquidacionDetalle) :
                new ObjectParameter("IdLiquidacionDetalle", typeof(int));
    
            var centroCostoAfectoParameter = centroCostoAfecto != null ?
                new ObjectParameter("CentroCostoAfecto", centroCostoAfecto) :
                new ObjectParameter("CentroCostoAfecto", typeof(string));
    
            var ordenServicioParameter = ordenServicio != null ?
                new ObjectParameter("OrdenServicio", ordenServicio) :
                new ObjectParameter("OrdenServicio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LiquidacionDetalle_Update", idLiquidacionDetalleParameter, centroCostoAfectoParameter, ordenServicioParameter);
        }
    
        public virtual ObjectResult<usp_Listar_CuentaMayor_Result> usp_Listar_CuentaMayor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Listar_CuentaMayor_Result>("usp_Listar_CuentaMayor");
        }
    
        public virtual ObjectResult<usp_Listar_IndicadorIGV_Result> usp_Listar_IndicadorIGV()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Listar_IndicadorIGV_Result>("usp_Listar_IndicadorIGV");
        }
    
        public virtual ObjectResult<usp_ProveedorTaxi_List_Result> usp_ProveedorTaxi_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProveedorTaxi_List_Result>("usp_ProveedorTaxi_List");
        }
    
        public virtual ObjectResult<usp_Usuario_GetBySociedad_Result> usp_Usuario_GetBySociedad(string codigoSociedad)
        {
            var codigoSociedadParameter = codigoSociedad != null ?
                new ObjectParameter("CodigoSociedad", codigoSociedad) :
                new ObjectParameter("CodigoSociedad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Usuario_GetBySociedad_Result>("usp_Usuario_GetBySociedad", codigoSociedadParameter);
        }
    
        public virtual ObjectResult<usp_AprobadorByCentroCosto_List_Result> usp_AprobadorByCentroCosto_List(string codigoCentroCosto)
        {
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AprobadorByCentroCosto_List_Result>("usp_AprobadorByCentroCosto_List", codigoCentroCostoParameter);
        }
    
        public virtual ObjectResult<usp_LiquidacionDetalle_By_Liquidacion_Result> usp_LiquidacionDetalle_By_Liquidacion(Nullable<int> idLiquidacion)
        {
            var idLiquidacionParameter = idLiquidacion.HasValue ?
                new ObjectParameter("IdLiquidacion", idLiquidacion) :
                new ObjectParameter("IdLiquidacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LiquidacionDetalle_By_Liquidacion_Result>("usp_LiquidacionDetalle_By_Liquidacion", idLiquidacionParameter);
        }
    
        public virtual ObjectResult<usp_LiquidacionDetalle_By_Liquidacion_Export_Detallado_Result> usp_LiquidacionDetalle_By_Liquidacion_Export_Detallado(string listaUsuario, string listaCentroCosto)
        {
            var listaUsuarioParameter = listaUsuario != null ?
                new ObjectParameter("ListaUsuario", listaUsuario) :
                new ObjectParameter("ListaUsuario", typeof(string));
    
            var listaCentroCostoParameter = listaCentroCosto != null ?
                new ObjectParameter("ListaCentroCosto", listaCentroCosto) :
                new ObjectParameter("ListaCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_LiquidacionDetalle_By_Liquidacion_Export_Detallado_Result>("usp_LiquidacionDetalle_By_Liquidacion_Export_Detallado", listaUsuarioParameter, listaCentroCostoParameter);
        }
    
        public virtual ObjectResult<usp_ResponsableByCentroCosto_List_Result> usp_ResponsableByCentroCosto_List(string codigoCentroCosto)
        {
            var codigoCentroCostoParameter = codigoCentroCosto != null ?
                new ObjectParameter("CodigoCentroCosto", codigoCentroCosto) :
                new ObjectParameter("CodigoCentroCosto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ResponsableByCentroCosto_List_Result>("usp_ResponsableByCentroCosto_List", codigoCentroCostoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Solicitud_Update(string xMLService)
        {
            var xMLServiceParameter = xMLService != null ?
                new ObjectParameter("XMLService", xMLService) :
                new ObjectParameter("XMLService", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Solicitud_Update", xMLServiceParameter);
        }
    
        public virtual ObjectResult<usp_SoporteAdministrativo_List_Result> usp_SoporteAdministrativo_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SoporteAdministrativo_List_Result>("usp_SoporteAdministrativo_List");
        }
    
        public virtual ObjectResult<usp_UsuarioRegistro_List_Result> usp_UsuarioRegistro_List(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UsuarioRegistro_List_Result>("usp_UsuarioRegistro_List", iDParameter);
        }
    
        public virtual ObjectResult<usp_UsuarioRegistroBySolicitud_List_Result> usp_UsuarioRegistroBySolicitud_List(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UsuarioRegistroBySolicitud_List_Result>("usp_UsuarioRegistroBySolicitud_List", iDParameter);
        }
    }
}
