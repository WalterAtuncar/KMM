@model WebApplication.Models.SolicitudViewModel
<style>
    #map-recorrido-canvas {
        width: 100%;
        height: 50vh;
    }
</style>
@{ 
    string key = ViewBag.Key;
}
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h3 class="modal-title" id="myModalLabel"><i class="fa fa-map-o"></i> <i class="fa fa-chevron-right"></i> RECORRIDO</h3>
</div>
<div class="modal-body">
    <div class="row">
        @Html.Hidden("ListaRecorrido", new JavaScriptSerializer().Serialize(Model.ListaRecorrido ?? new List<Data.Common.Destino>()), new { @id = "ListaRecorrido" }) 
        <div id="map-recorrido-canvas"></div>
    </div>
</div>
<div class="modal-footer">
</div>
<script>

    function initMap() {
        var geocoder = new google.maps.Geocoder();
        var map = new google.maps.Map(document.getElementById('map-recorrido-canvas'), {
            zoom: 16
        });
        var directionsService = new google.maps.DirectionsService,
        directionsDisplay = new google.maps.DirectionsRenderer({
            map: map,
            markerOptions: {
                animation: google.maps.Animation.DROP,
                zIndex: 11
            },
        });
        calculateAndDisplayRoute(directionsService, directionsDisplay);
    }

    function calculateAndDisplayRoute(directionsservice, directionsdisplay) {
        var waypoints = JSON.parse($("#ListaRecorrido").val());
        var way = [];
        var origen, destino;
        $.each(waypoints, function (i, objDestino) {
            if (i == 0) {
                origen = objDestino.DireccionOrigen;
                if (i != waypoints.length - 1) {
                    way.push({
                        location: objDestino.DireccionDestino,
                        stopover: true
                    })
                }
            } else if (i > 0 && i < waypoints.length - 1) {
                way.push({
                    location: objDestino.DireccionDestino,
                    stopover: true
                })
            }
            if (i == waypoints.length - 1) {
                destino = objDestino.DireccionDestino;
            }
        });
        //console.log(origen);
        //console.log(destino);
        //console.log(way);
        directionsservice.route({
            origin: origen,
            destination: destino,
            waypoints: way,
            optimizeWaypoints: true,
            travelMode: 'DRIVING'
        }, function (response, status) {
            if (status == 'OK') {
                directionsdisplay.setDirections(response);
            } else {
                window.alert('directions request failed due to ' + status);
            }
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@key&callback=initMap&libraries=places&sensor=false" async defer></script>